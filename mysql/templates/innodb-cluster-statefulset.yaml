apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-mysql-innodb-cluster
  labels:
    app: {{ .Release.Name }}-mysql-innodb-cluster
spec:
  replicas: {{ .Values.innoDbCluster.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mysql-innodb-cluster
  serviceName: {{ .Release.Name }}-mysql-innodb-headless
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mysql-innodb-cluster
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.nodeSelector }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      containers:
        - name: mysql
          image: {{ .Values.innoDbCluster.image }}
          env:
            - name: SVC_NAME
              value: {{ .Release.Name }}-mysql-innodb-headless
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mysql-secret
                  key: password
            - name: MYSQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mysql-secret
                  key: admin-password
            - name: MYSQL_ROOT_HOST
              value: '%'
          ports:
            - name: mysql
              containerPort: {{ .Values.innoDbCluster.mysql.port }}
            - name: mysqlx
              containerPort: 33060
            - name: xcom
              containerPort: 33061
          resources:
            limits:
              cpu: "500m"
              ephemeral-storage: "1Gi"
              memory: "1Gi"
            requests:
              cpu: "500m"
              ephemeral-storage: "1Gi"
              memory: "1Gi"
          volumeMounts:
            - name:  {{ .Release.Name }}-mysql-pvc
              mountPath: /var/lib/mysql
              subPath: mysql
            - name: config-volume
              mountPath: /etc/mysql/conf.d
            - name: init-shell
              mountPath: /docker-entrypoint-initdb.d/
          readinessProbe:
            exec:
              command:
                - bash
                - "-c"
                - |
                  mysql -h127.0.0.1 -uroot -p$MYSQL_ROOT_PASSWORD -e'SELECT 1'
            initialDelaySeconds: 30
            periodSeconds: 2
            timeoutSeconds: 1
          livenessProbe:
            exec:
              command:
                - bash
                - "-c"
                - |
                  mysqladmin -uroot -p$MYSQL_ROOT_PASSWORD ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: config-volume
          emptyDir: { }
        - name: init-shell
          configMap:
            name: {{ .Release.Name }}-mysql-init-shell
            defaultMode: 420
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate

  volumeClaimTemplates:
    - metadata:
        name:  {{ .Release.Name }}-mysql-pvc
        labels:
          app:  {{ .Release.Name }}-mysql-pvc
      spec:
        storageClassName: {{ .Values.storage.storageClassName }}
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.storage.request }}